@page "/"
@inject HttpClient Client

<h1>Todos</h1>

@if (todos is null)
{
    if (statusCode is null)
    {
        <em>Loading...</em>
    }
    else if (statusCode == HttpStatusCode.Unauthorized)
    {
        <em>We need to authenticate</em>

        <div>
            <input type="text" name="username" @bind="username" />
        </div>
        <div>
            <input type="password" name="password" @bind="password" />
        </div>
        <input type="button" value="Login" onclick="@(() => Login())" />
    }
    else if (statusCode >= HttpStatusCode.InternalServerError)
    {
        <em>There was an error!</em>
    }
    else
    {
        @statusCode
    }
}
else
{
    <input type="button" value="Logout" onclick="@(() => Logout())" />

    <section class="todoapp">
      <header class="header">
        <form onsubmit="@(() => AddTodo())">
          <input class="new-todo" placeholder="What needs to be done?" @bind="todoItem" />
        </form>
      </header>
      <section class="main" style="display: block">
        <ul class="todo-list">
        @foreach (var todo in todos)
        {
            <li class=@(todo.IsComplete ? "completed" : "") @key="@todo.Id">
                <div class="view">
                  <input class="toggle" type="checkbox" checked="@todo.IsComplete" />
                  <label>@todo.Title</label>
                  <button class="destroy"></button>
                </div>
              </li>
        }
        </ul>
      </section>
    </section>
}

@code {
    TodoItem[]? todos;
    HttpStatusCode? statusCode;

    string? username;
    string? password;

    string? todoItem;

    private async Task AddTodo()
    {
        if (todoItem is { Length: > 0 })
        {
            var response = await Client.PostAsJsonAsync("todos", new TodoItem { Title = todoItem });

            if (response.IsSuccessStatusCode)
            {
                todoItem = null;

                await OnInitializedAsync();
            }
        }
    }

    private async Task Logout()
    {
        var response = await Client.PostAsync("auth/logout", content: null);
        if (response.IsSuccessStatusCode)
        {
            statusCode = HttpStatusCode.Unauthorized;
            todos = null;
        }
    }

    private async Task Login()
    {
        var response = await Client.PostAsJsonAsync("auth/login", new { Username = username, Password = password });

        if (response.IsSuccessStatusCode)
        {
            username = null;
            password = null;

            await OnInitializedAsync();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        statusCode = null;
        var response = await Client.GetAsync("todos");
        statusCode = response.StatusCode;

        if (response.IsSuccessStatusCode)
        {
            todos = await response.Content.ReadFromJsonAsync<TodoItem[]>();
        }
        else if (statusCode == HttpStatusCode.Forbidden)
        {
            await Logout();
        }
    }
}